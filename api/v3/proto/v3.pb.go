// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v3.proto

package temporalv3

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_v3_a9ea8ad05a62d0b3, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "temporalv3.Message")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TemporalClient is the client API for Temporal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TemporalClient interface {
	Status(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
}

type temporalClient struct {
	cc *grpc.ClientConn
}

func NewTemporalClient(cc *grpc.ClientConn) TemporalClient {
	return &temporalClient{cc}
}

func (c *temporalClient) Status(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/temporalv3.Temporal/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TemporalServer is the server API for Temporal service.
type TemporalServer interface {
	Status(context.Context, *Message) (*Message, error)
}

func RegisterTemporalServer(s *grpc.Server, srv TemporalServer) {
	s.RegisterService(&_Temporal_serviceDesc, srv)
}

func _Temporal_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemporalServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/temporalv3.Temporal/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemporalServer).Status(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _Temporal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "temporalv3.Temporal",
	HandlerType: (*TemporalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _Temporal_Status_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v3.proto",
}

func init() { proto.RegisterFile("v3.proto", fileDescriptor_v3_a9ea8ad05a62d0b3) }

var fileDescriptor_v3_a9ea8ad05a62d0b3 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0x33, 0xd6, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2a, 0x49, 0xcd, 0x2d, 0xc8, 0x2f, 0x4a, 0xcc, 0x29, 0x33,
	0x96, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb,
	0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0xa8, 0x54, 0x52, 0xe6, 0x62, 0xf7, 0x4d,
	0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x15, 0x92, 0xe0, 0x62, 0xcf, 0x85, 0x30, 0x25, 0x18, 0x15, 0x18,
	0x35, 0x38, 0x83, 0x60, 0x5c, 0xa3, 0x20, 0x2e, 0x8e, 0x10, 0xa8, 0x81, 0x42, 0x6e, 0x5c, 0x6c,
	0xc1, 0x25, 0x89, 0x25, 0xa5, 0xc5, 0x42, 0xc2, 0x7a, 0x08, 0x5b, 0xf4, 0xa0, 0x86, 0x48, 0x61,
	0x13, 0x54, 0x12, 0x6a, 0xba, 0xfc, 0x64, 0x32, 0x13, 0x8f, 0x10, 0x97, 0x7e, 0x99, 0xb1, 0x7e,
	0x31, 0x58, 0x77, 0x12, 0x1b, 0xd8, 0x7e, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x06, 0xbb,
	0xcb, 0x96, 0xb5, 0x00, 0x00, 0x00,
}
