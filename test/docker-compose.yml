version: '3'

services:
    ipfs.1:
    build:
      context: .
      dockerfile: ipfs.Dockerfile
    ports:
      # IPFS
      - "192.168.1.101:8080:8080" # gateway
      - "192.168.1.101:5001:5001" # api
      - "192.168.1.101:4001:4001" # swarm
      # IPFS-cluster
      - "192.168.1.101:9094:9094" # api
      - "192.168.1.101:9095:9095" # discovery
      - "192.168.1.101:9096:9096"
    privileged: true
    volumes:
      - ${PWD}/test/ipfs.1.service.json:/ipfs-cluster.service.json

  ipfs.2:
    depends_on:
      - ipfs.1
    build:
      context: .
      dockerfile: ipfs.Dockerfile
    command: daemon --bootstrap /ip4/192.168.1.101/tcp/9096/ipfs/QmRiwg9GM1wNx3ZeiPdZBjAsy99qvhYpzu5yt1fa75mSx5
    ports:
      # IPFS
      - "192.168.1.102:8080:8080" # gateway
      - "192.168.1.102:5001:5001" # api
      - "192.168.1.102:4001:4001" # swarm
      # IPFS-cluster
      - "192.168.1.102:9094:9094" # api
      - "192.168.1.102:9095:9095" # discovery
      - "192.168.1.102:9096:9096"
    privileged: true
    volumes:
      - ${PWD}/test/ipfs.2.service.json:/ipfs-cluster.service.json

  postgres:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: "temporal"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password123"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
    command: ["server", "/data"]
    environment:
      MINIO_ACCESS_KEY: "C03T49S17RP0APEZDK6M"
      MINIO_SECRET_KEY: "q4I9t2MN/6bAgLkbF6uyS7jtQrXuNARcyrm2vvNA"

  rabbitmq:
    image: rabbitmq
    ports:
      - "5672:5672"
