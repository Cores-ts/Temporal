# Production docker-compose setup for Temporal.
#
# Usage:
#   env TEMPORAL=latest BASE=/my/dir docker-compose -f temporal.yml up
#
# Data:
#   - Leave BASE unassigned to use the root directory.
#   - Generally, component data goes in $BASE/data/$COMPONENT.
#
# Configuration:
#   * temporal, queue-*:
#     - configuration file should be in data directory
#     - set TEMPORAL in env to use desired version
#   * ipfs, ipfs-cluster:
#     - configuration files should be in data directory
#

version: '3'

services:
  temporal:
    image: rtradetech/temporal:${TEMPORAL}
    network_mode: "host" # expose all
    volumes:
      - ${BASE}/data/temporal:/data/temporal

  krab:
    image: rtradetech/temporal:${TEMPORAL}
    network_mode: "host" # expose all
    command: krab
    volumes:
      - ${BASE}/data/temporal:/data/temporal

  queue-email-send:
    image: rtradetech/temporal:${TEMPORAL}
    network_mode: "host" # expose all
    command: queue email-send
    volumes:
      - ${BASE}/data/temporal:/data/temporal

  queue-ipfs-cluster:
    image: rtradetech/temporal:${TEMPORAL}
    network_mode: "host" # expose all
    command: queue ipfs cluster
    volumes:
      - ${BASE}/data/temporal:/data/temporal

  queue-ipfs-ipns-entry:
    image: rtradetech/temporal:${TEMPORAL}
    network_mode: "host" # expose all
    command: queue ipfs ipns-entry
    volumes:
      - ${BASE}/data/temporal:/data/temporal

  queue-ipfs-key-creation:
    image: rtradetech/temporal:${TEMPORAL}
    network_mode: "host" # expose all
    command: queue ipfs key-creation
    volumes:
      - ${BASE}/data/temporal:/data/temporal

  queue-ipfs-pin:
    image: rtradetech/temporal:${TEMPORAL}
    network_mode: "host" # expose all
    command: queue ipfs pin
    volumes:
      - ${BASE}/data/temporal:/data/temporal

  ipfs:
    image: ipfs/go-ipfs:v0.4.22
    command: daemon --migrate=true --enable-namesys-pubsub
    ports:
      - 4001:4001
      - 5001:5001
      - 8080:8080
    volumes:
      - ${BASE}/data/ipfs:/data/ipfs

  ipfs_cluster:
    depends_on: 
      - ipfs
    image: ipfs/ipfs-cluster:v0.11.0
    ports:
      - 9094:9094
      - 9095:9095
      - 9096:9096
    volumes:
      - ${BASE}/data/ipfs-cluster:/data/ipfs-cluster

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "temporal"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password123"

  rabbitmq:
    image: rabbitmq
    ports:
      - "5672:5672"